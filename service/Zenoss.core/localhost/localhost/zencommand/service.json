{
    "Description": "Run plugins locally and remotely by using a native SSH transport",
    "Actions": {
        "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
        "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
    },
    "Command": "su - zenoss -c \"/opt/zenoss/bin/zencommand run -c --duallog --monitor {{(parent .).Name}} \"",
    "ConfigFiles": {
        "/opt/zenoss/etc/global.conf": {
            "Filename": "/opt/zenoss/etc/global.conf",
            "Owner": "zenoss:zenoss",
            "Permissions": "660",
            "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}"
        },
        "/opt/zenoss/etc/zencommand.conf": {
            "FileName": "/opt/zenoss/etc/zencommand.conf",
            "Owner": "zenoss:zenoss",
            "Permissions": "0664"
        }
    },
    "Endpoints": [
        {
            "Name": "zenhub",
            "Application": "{{(parent (parent .)).Name}}_zenhubPB",
            "PortNumber": 8789,
            "Protocol": "tcp",
            "Purpose": "import"
        },
        {
            "Name": "CollectorRedis",
            "Application": "{{(parent .).Name}}_redis",
            "PortNumber": 6379,
            "Protocol": "tcp",
            "Purpose": "import"
        },
        {
            "Name": "controlplane_consumer",
            "Application": "controlplane_consumer",
            "PortNumber": 8444,
            "Protocol": "tcp",
            "Purpose": "import"
        }
    ],
    "ImageID": "zenoss/zenoss5x",
    "Instances": {
        "min": 1,
        "max": 1
    },
    "RAMCommitment": 268435456,
    "CPUCommitment": 1,
    "Launch": "auto",
    "LogConfigs": [
        {
            "LogTags": [
                {
                    "Name": "monitor",
                    "Value": "{{(parent .).Name}}"
                }
            ],
            "filters": [
                "pythondaemon"
            ],
            "path": "/opt/zenoss/log/zencommand.log",
            "type": "zencommand"
        }
    ],
    "Name": "zencommand",
    "Services": [],
    "Tags": [
        "daemon",
        "collector"
    ],
    "MonitoringProfile": {
        "MetricConfigs": [
            {
                "ID": "zencommand",
                "Name": "zencommand internal metrics",
                "Description": "zencommand internal metrics",
                "Metrics": [
                    {
                        "ID": "dataPoints",
                        "Name": "Datapoints",
                        "Description": "Number of datapoints collected.",
                        "Counter": true,
                        "Unit": "Points"
                    },
                    {
                        "ID": "devices",
                        "Name": "Devices",
                        "Description": "Number of devices.",
                        "Counter": false,
                        "Unit": "Count"
                    },
                    {
                        "ID": "eventCount",
                        "Name": "Event Count",
                        "Description": "Total number of events.",
                        "Counter": true,
                        "Unit": "Events"
                    },
                    {
                        "ID": "eventQueueLength",
                        "Name": "Event Queue Length",
                        "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                        "Counter": false,
                        "Unit": "Events"
                    },
                    {
                        "ID": "missedRuns",
                        "Name": "Missed Runs",
                        "Description": "Number of missed runs of tasks running on daemon.",
                        "Counter": true,
                        "Unit": "Runs"
                    },
                    {
                        "ID": "queuedTasks",
                        "Name": "Queued Tasks",
                        "Description": "Number of tasks scheduled to be run, but are not running yet.",
                        "Counter": false,
                        "Unit": "Tasks"
                    },
                    {
                        "ID": "runningTasks",
                        "Name": "Running Tasks",
                        "Description": "Number of currently running tasks.",
                        "Counter": false,
                        "Unit": "Tasks"
                    },
                    {
                        "ID": "taskCount",
                        "Name": "Task Count",
                        "Description": "Total number of tasks.",
                        "Counter": false,
                        "Unit": "Tasks"
                    }
                ]
            }
        ],
        "GraphConfigs": [
            {
                "id": "dataPoints",
                "name": "Data Points",
                "footer": false,
                "returnset": "EXACT",
                "type": "line",
                "yAxisLabel": "Data Points",
                "description": "Number of datapoints collected.",
                "range": {
                    "start": "1h-ago",
                    "end": "0s-ago"
                },
                "datapoints": [
                    {
                        "aggregator": "avg",
                        "fill": false,
                        "format": "%d",
                        "id": "dataPoints",
                        "legend": "Data Points",
                        "metric": "dataPoints",
                        "metricSource": "zencommand",
                        "name": "Data Points",
                        "rate": true,
                        "type": "line"
                    }
                ]
            },
            {
                "id": "devices",
                "name": "Devices",
                "footer": false,
                "returnset": "EXACT",
                "type": "line",
                "yAxisLabel": "Devices",
                "description": "Number of devices.",
                "range": {
                    "start": "1h-ago",
                    "end": "0s-ago"
                },
                "datapoints": [
                    {
                        "aggregator": "avg",
                        "fill": false,
                        "format": "%d",
                        "id": "devices",
                        "legend": "Devices",
                        "metric": "devices",
                        "metricSource": "zencommand",
                        "name": "Devices",
                        "rate": false,
                        "type": "line"
                    }
                ]
            },
            {
                "id": "eventCount",
                "name": "Event Count",
                "footer": false,
                "format": "%.3f",
                "returnset": "EXACT",
                "type": "line",
                "yAxisLabel": "Event Count",
                "description": "Total number of events.",
                "range": {
                    "start": "1h-ago",
                    "end": "0s-ago"
                },
                "datapoints": [
                    {
                        "aggregator": "avg",
                        "fill": false,
                        "format": "%.3f",
                        "id": "eventCount",
                        "legend": "Event Count",
                        "metric": "eventCount",
                        "metricSource": "zencommand",
                        "name": "Event Count",
                        "rate": true,
                        "type": "line"
                    }
                ]
            },
            {
                "id": "eventQueueLength",
                "name": "Event Queue Length",
                "footer": false,
                "format": "%.3f",
                "returnset": "EXACT",
                "type": "line",
                "yAxisLabel": "Event Queue Length",
                "description": "The number of events pending to be flushed from a daemon's memory queue.",
                "range": {
                    "start": "1h-ago",
                    "end": "0s-ago"
                },
                "datapoints": [
                    {
                        "aggregator": "avg",
                        "fill": false,
                        "format": "%.3f",
                        "id": "eventQueueLength",
                        "legend": "Event Queue Length",
                        "metric": "eventQueueLength",
                        "metricSource": "zencommand",
                        "name": "Event Queue Length",
                        "rate": false,
                        "type": "line"
                    }
                ]
            },
            {
                "id": "missedRuns",
                "name": "Missed Runs",
                "footer": false,
                "returnset": "EXACT",
                "type": "line",
                "yAxisLabel": "Missed Runs",
                "description": "Number of missed runs of tasks running on daemon.",
                "range": {
                    "start": "1h-ago",
                    "end": "0s-ago"
                },
                "datapoints": [
                    {
                        "aggregator": "avg",
                        "fill": false,
                        "format": "%d",
                        "id": "missedRuns",
                        "legend": "Missed Runs",
                        "metric": "missedRuns",
                        "metricSource": "zencommand",
                        "name": "Missed Runs",
                        "rate": true,
                        "type": "line"
                    }
                ]
            },
            {
                "id": "tasks",
                "name": "Tasks",
                "footer": false,
                "returnset": "EXACT",
                "type": "line",
                "yAxisLabel": "",
                "description": "Number of queued, running, and total tasks.",
                "range": {
                    "start": "1h-ago",
                    "end": "0s-ago"
                },
                "datapoints": [
                    {
                        "aggregator": "avg",
                        "fill": false,
                        "format": "%d",
                        "id": "queuedTasks",
                        "legend": "Queued Tasks",
                        "metric": "queuedTasks",
                        "metricSource": "zencommand",
                        "name": "Queued Tasks",
                        "rate": false,
                        "type": "line"
                    },
                    {
                        "aggregator": "avg",
                        "fill": false,
                        "format": "%d",
                        "id": "runningTasks",
                        "legend": "Running Tasks",
                        "metric": "runningTasks",
                        "metricSource": "zencommand",
                        "name": "Running Tasks",
                        "rate": false,
                        "type": "line"
                    },
                    {
                        "aggregator": "avg",
                        "fill": false,
                        "format": "%d",
                        "id": "taskCount",
                        "legend": "Task Count",
                        "metric": "taskCount",
                        "metricSource": "zencommand",
                        "name": "Task Count",
                        "rate": false,
                        "type": "line"
                    }
                ]
            }
        ]
    },
    "HealthChecks": {
        "zenhub_answering": {
            "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
            "Interval": 10.0
        },
        "redis_answering": {
            "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
            "Interval": 5.0
        },
        "running": {
            "Script": "pgrep -fu zenoss zencommand.py > /dev/null",
            "Interval": 5.0
        }
    },
    "Volumes": [
        {
            "Owner": "zenoss:zenoss",
            "ContainerPath": "/home/zenoss/.ssh",
            "Type": "",
            "ResourcePath": ".ssh",
            "Permission": "0755"
        }
    ]
}